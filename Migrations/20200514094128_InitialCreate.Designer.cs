// <auto-generated />
using System;
using BusinessTrip.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BusinessTrip.Migrations
{
    [DbContext(typeof(BusinessTripContext))]
    [Migration("20200514094128_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BusinessTrip.Models.App_Fundation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<int?>("FoundationId")
                        .HasColumnType("int");

                    b.Property<int>("FundationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FoundationId");

                    b.ToTable("App_Fundation");
                });

            modelBuilder.Entity("BusinessTrip.Models.App_Transport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("TransportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TransportId");

                    b.ToTable("App_Transport");
                });

            modelBuilder.Entity("BusinessTrip.Models.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("App_fundationId")
                        .HasColumnType("int");

                    b.Property<int>("App_fundation_Id")
                        .HasColumnType("int");

                    b.Property<int?>("App_transport_Id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("End_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Institution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstitutionLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Itinerary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Main_place_of_work")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Payment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position_in_combination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Saving_salary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Start_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Trip_city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trip_country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("app_transportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("App_fundationId");

                    b.HasIndex("UserId");

                    b.HasIndex("app_transportId");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("BusinessTrip.Models.Foundation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Trip_Foundation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Foundation");
                });

            modelBuilder.Entity("BusinessTrip.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("BusinessTrip.Models.Transport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TransportType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Transport");
                });

            modelBuilder.Entity("BusinessTrip.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BusinessTrip.Models.App_Fundation", b =>
                {
                    b.HasOne("BusinessTrip.Models.Foundation", "Foundation")
                        .WithMany("App_Fundation")
                        .HasForeignKey("FoundationId");
                });

            modelBuilder.Entity("BusinessTrip.Models.App_Transport", b =>
                {
                    b.HasOne("BusinessTrip.Models.Transport", "TransportType")
                        .WithMany("App_transport")
                        .HasForeignKey("TransportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusinessTrip.Models.Application", b =>
                {
                    b.HasOne("BusinessTrip.Models.App_Fundation", "App_fundation")
                        .WithMany("Application")
                        .HasForeignKey("App_fundationId");

                    b.HasOne("BusinessTrip.Models.User", "User")
                        .WithMany("Application")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessTrip.Models.App_Transport", "app_transport")
                        .WithMany("Application")
                        .HasForeignKey("app_transportId");
                });

            modelBuilder.Entity("BusinessTrip.Models.User", b =>
                {
                    b.HasOne("BusinessTrip.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
